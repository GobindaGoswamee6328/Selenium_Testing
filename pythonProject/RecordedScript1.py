# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestDefaultSuite():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_test1(self):
        self.driver.get("https://trytestingthis.netlify.app/")
        self.driver.set_window_size(652, 672)
        self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(1)").click()
        assert self.driver.switch_to.alert.text == "Press a button!"
        self.driver.switch_to.alert.accept()
        self.driver.find_element(By.ID, "fname").click()
        self.driver.find_element(By.ID, "fname").send_keys("Gobinda ")
        self.driver.find_element(By.ID, "lname").click()
        self.driver.find_element(By.ID, "lname").send_keys("Goswamee")
        self.driver.find_element(By.ID, "male").click()
        self.driver.find_element(By.ID, "option").click()
        dropdown = self.driver.find_element(By.ID, "option")
        dropdown.find_element(By.XPATH, "//option[. = 'Option 1']").click()
        dropdown = self.driver.find_element(By.ID, "owc")
        dropdown.find_element(By.XPATH, "//option[. = 'Option 1']").click()
        self.driver.find_element(By.CSS_SELECTOR, "label:nth-child(38)").click()
        self.driver.find_element(By.NAME, "Options").click()
        self.driver.find_element(By.NAME, "Options").send_keys("Strawberry")
        self.driver.find_element(By.ID, "favcolor").click()
        self.driver.find_element(By.ID, "favcolor").send_keys("#ce00d1")
        self.driver.find_element(By.ID, "day").click()
        self.driver.find_element(By.ID, "day").click()
        self.driver.find_element(By.ID, "day").send_keys("2024-10-09")
        self.driver.find_element(By.ID, "a").send_keys("65")
        self.driver.find_element(By.ID, "a").click()
        self.driver.find_element(By.ID, "quantity").click()
        self.driver.find_element(By.ID, "quantity").send_keys("5")
        self.driver.find_element(By.NAME, "message").click()
        self.driver.find_element(By.NAME, "message").send_keys("The cat was playing in the garden.\\nok ")
        self.driver.find_element(By.NAME, "message").send_keys("The cat was playing in the garden.\\nok Good")
        elements = self.driver.find_elements(By.CSS_SELECTOR, ".btn")
        assert len(elements) > 0
        element = self.driver.find_element(By.CSS_SELECTOR, ".btn")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".btn")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".btn")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
        self.vars["win3552"] = self.wait_for_window(2000)
        self.vars["root"] = self.driver.current_window_handle
        self.driver.switch_to.window(self.vars["win3552"])
        self.driver.close()
        self.driver.switch_to.window(self.vars["root"])
        self.driver.find_element(By.NAME, "message").click()
        self.driver.find_element(By.NAME, "message").click()
        self.driver.find_element(By.ID, "quantity").click()
        self.driver.find_element(By.ID, "uname").click()
        self.driver.find_element(By.ID, "uname").send_keys("test")
        self.driver.find_element(By.ID, "pwd").click()
        self.driver.find_element(By.ID, "pwd").send_keys("test")
        self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(10)").click()
        self.driver.find_element(By.CSS_SELECTOR, "h2").click()
        elements = self.driver.find_elements(By.CSS_SELECTOR, "h2")
        assert len(elements) > 0

